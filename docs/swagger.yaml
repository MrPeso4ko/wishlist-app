basePath: /api
definitions:
  handler.CreateWishRequest:
    properties:
      comment:
        type: string
      image_url:
        type: string
      price:
        type: number
      title:
        type: string
    required:
    - title
    type: object
  handler.LoginRequest:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
  handler.LoginResponse:
    properties:
      token:
        type: string
    type: object
  handler.RegisterRequest:
    properties:
      login:
        maxLength: 50
        minLength: 3
        type: string
      password:
        maxLength: 50
        minLength: 6
        type: string
    required:
    - login
    - password
    type: object
  handler.UpdateWishRequest:
    properties:
      comment:
        type: string
      image_url:
        type: string
      price:
        type: number
      title:
        type: string
    type: object
  models.PublicUser:
    properties:
      id:
        type: integer
      login:
        type: string
    type: object
  models.PublicWish:
    properties:
      comment:
        type: string
      id:
        type: integer
      image_url:
        type: string
      price:
        type: number
      title:
        type: string
      user:
        $ref: '#/definitions/models.PublicUser'
    type: object
info:
  contact:
    email: pdsalnikov@edu.hse.ru
    name: Petr Salnikov
  description: API server for managing wishes.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Wishlist API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login a user with login and password
      parameters:
      - description: Login Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.LoginResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login a user
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user with login and password
      parameters:
      - description: Register Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - auth
  /wishes:
    get:
      consumes:
      - application/json
      description: Get all wishes for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.PublicWish'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get wishes for authenticated user
      tags:
      - wishes
    post:
      consumes:
      - application/json
      description: Create a new wish for the authenticated user
      parameters:
      - description: Create Wish Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.CreateWishRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.PublicWish'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new wish
      tags:
      - wishes
  /wishes/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing wish for the authenticated user
      parameters:
      - description: Wish ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a wish
      tags:
      - wishes
    put:
      consumes:
      - application/json
      description: Update an existing wish for the authenticated user
      parameters:
      - description: Wish ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Wish Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateWishRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update a wish
      tags:
      - wishes
  /wishes/{username}:
    get:
      consumes:
      - application/json
      description: Get all public wishes for a specific user by username
      parameters:
      - description: Username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.PublicWish'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get wishes by username
      tags:
      - wishes
swagger: "2.0"
